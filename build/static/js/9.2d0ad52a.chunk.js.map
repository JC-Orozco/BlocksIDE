{"version":3,"sources":["..\\static\\js\\9.2d0ad52a.chunk.js","..\\node_modules\\blockpy\\src\\blockly_blocks\\decorator.js"],"names":["webpackJsonp","280","module","exports","Blockly","Blocks","init","this","appendValueInput","setCheck","appendField","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","Python","block","valueToCode","ORDER_ATOMIC","JavaScript"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,GCHxBC,QAAAC,OAAA,WACAC,KAAA,WACAC,KAAAC,iBAAA,QACAC,SAAA,MACAC,YAAA,KACAH,KAAAI,sBAAA,QACAJ,KAAAK,kBAAA,QACAL,KAAAM,UAAA,KACAN,KAAAO,WAAA,IACAP,KAAAQ,WAAA,MAGAX,QAAAY,OAAA,mBAAAC,GAGA,MADA,KADAb,QAAAY,OAAAE,YAAAD,EAAA,OAAAb,QAAAY,OAAAG,eACA,aAIAf,QAAAgB,WAAA,mBAAAH,GAGA,MADA,KADAb,QAAAgB,WAAAF,YAAAD,EAAA,OAAAb,QAAAgB,WAAAD,eACA","file":"static/js/9.2d0ad52a.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 280:\n/***/ (function(module, exports) {\n\nBlockly.Blocks['decorator'] = {\n  init: function() {\n    this.appendValueInput(\"BODY\")\n        .setCheck(null)\n        .appendField(\"@\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  }\n};\nBlockly.Python['decorator'] = function(block) {\n  var value_name = Blockly.Python.valueToCode(block, 'BODY', Blockly.Python.ORDER_ATOMIC);\n  var code = '@'+(value_name  || '___')+'\\n';\n  return code;\n};\n// JCOA TODO: What is the js equivalent of a decorator\nBlockly.JavaScript['decorator'] = function(block) {\n  var value_name = Blockly.JavaScript.valueToCode(block, 'BODY', Blockly.JavaScript.ORDER_ATOMIC);\n  var code = '@'+(value_name  || '___')+'\\n';\n  return code;\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/9.2d0ad52a.chunk.js","Blockly.Blocks['decorator'] = {\n  init: function() {\n    this.appendValueInput(\"BODY\")\n        .setCheck(null)\n        .appendField(\"@\");\n    this.setPreviousStatement(true, null);\n    this.setNextStatement(true, null);\n    this.setColour(230);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  }\n};\nBlockly.Python['decorator'] = function(block) {\n  var value_name = Blockly.Python.valueToCode(block, 'BODY', Blockly.Python.ORDER_ATOMIC);\n  var code = '@'+(value_name  || '___')+'\\n';\n  return code;\n};\n// JCOA TODO: What is the js equivalent of a decorator\nBlockly.JavaScript['decorator'] = function(block) {\n  var value_name = Blockly.JavaScript.valueToCode(block, 'BODY', Blockly.JavaScript.ORDER_ATOMIC);\n  var code = '@'+(value_name  || '___')+'\\n';\n  return code;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blockpy/src/blockly_blocks/decorator.js\n// module id = 280\n// module chunks = 9"],"sourceRoot":""}