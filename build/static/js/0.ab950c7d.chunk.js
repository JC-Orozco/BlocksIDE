webpackJsonp([0],{289:function(t,e){Blockly.Blocks.turtle_create={init:function(){this.appendDummyInput().appendField("create new turtle"),this.setOutput(!0,"Turtle"),this.setColour(180),this.setTooltip("Creates a new turtle"),this.setHelpUrl("")}},Blockly.Python.turtle_create=function(t){return Blockly.Python.definitions_.import_turtle="import turtle",["turtle.Turtle()",Blockly.Python.ORDER_NONE]},PythonToBlocks.KNOWN_MODULES.turtle={Turtle:["turtle_create"]},Blockly.Blocks.turtle_color={init:function(){this.appendValueInput("TURTLE").setCheck("Turtle").appendField("make turtle"),this.appendValueInput("COLOR").setCheck(null).appendField("color"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setOutput(!1),this.setInputsInline(!0),this.setColour(180),this.setTooltip(""),this.setHelpUrl("")}},Blockly.Python.turtle_color=function(t){return Blockly.Python.valueToCode(t,"TURTLE",Blockly.Python.ORDER_ATOMIC)+".color("+Blockly.Python.valueToCode(t,"COLOR",Blockly.Python.ORDER_ATOMIC)+")\n"},PythonToBlocks.KNOWN_ATTR_FUNCTIONS.color=function(t,e,l,o,n,r){if(e.length<1||e.length>2)throw new Error("Incorrect number of arguments to turtle.color!");return[block("turtle_color",t.lineno,{},{COLOR:this.convert(e[0]),TURTLE:this.convert(t.value)},{inline:"true"})]},Blockly.Blocks.turtle_forward={init:function(){this.appendValueInput("TURTLE").setCheck("Turtle").appendField("make turtle"),this.appendValueInput("DISTANCE").setCheck(null).appendField("move forward by"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setOutput(!1),this.setColour(180),this.setTooltip(""),this.setHelpUrl("")}},Blockly.Python.turtle_forward=function(t){return Blockly.Python.valueToCode(t,"TURTLE",Blockly.Python.ORDER_ATOMIC)+".forward("+Blockly.Python.valueToCode(t,"DISTANCE",Blockly.Python.ORDER_ATOMIC)+")\n"},PythonToBlocks.KNOWN_ATTR_FUNCTIONS.forward=function(t,e,l,o,n,r){if(1!=e.length)throw new Error("Incorrect number of arguments to turtle.forward!");return[block("turtle_forward",t.lineno,{},{DISTANCE:this.convert(e[0]),TURTLE:this.convert(t.value)},{inline:"true"})]},Blockly.Blocks.turtle_backward={init:function(){this.appendValueInput("TURTLE").setCheck("Turtle").appendField("make turtle"),this.appendValueInput("DISTANCE").setCheck(null).appendField("move backward by"),this.setPreviousStatement(!0),this.setInputsInline(!0),this.setNextStatement(!0),this.setOutput(!1),this.setColour(180),this.setTooltip(""),this.setHelpUrl("")}},Blockly.Python.turtle_backward=function(t){return Blockly.Python.valueToCode(t,"TURTLE",Blockly.Python.ORDER_ATOMIC)+".backward("+Blockly.Python.valueToCode(t,"DISTANCE",Blockly.Python.ORDER_ATOMIC)+")\n"},PythonToBlocks.KNOWN_ATTR_FUNCTIONS.backward=function(t,e,l,o,n,r){if(1!=e.length)throw new Error("Incorrect number of arguments to turtle.backward!");return[block("turtle_backward",t.lineno,{},{DISTANCE:this.convert(e[0]),TURTLE:this.convert(t.value)},{inline:"true"})]},Blockly.Blocks.turtle_left={init:function(){this.appendValueInput("TURTLE").setCheck("Turtle").appendField("make turtle"),this.appendValueInput("ANGLE").setCheck(null).appendField("turn left by"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setOutput(!1),this.setColour(180),this.setTooltip(""),this.setHelpUrl("")}},Blockly.Python.turtle_left=function(t){return Blockly.Python.valueToCode(t,"TURTLE",Blockly.Python.ORDER_ATOMIC)+".left("+Blockly.Python.valueToCode(t,"ANGLE",Blockly.Python.ORDER_ATOMIC)+")\n"},PythonToBlocks.KNOWN_ATTR_FUNCTIONS.left=function(t,e,l,o,n,r){if(1!=e.length)throw new Error("Incorrect number of arguments to turtle.left!");return[block("turtle_left",t.lineno,{},{ANGLE:this.convert(e[0]),TURTLE:this.convert(t.value)},{inline:"true"})]},Blockly.Blocks.turtle_right={init:function(){this.appendValueInput("TURTLE").setCheck("Turtle").appendField("make turtle"),this.appendValueInput("ANGLE").setCheck(null).appendField("turn right by"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0),this.setOutput(!1),this.setColour(180),this.setTooltip(""),this.setHelpUrl("")}},Blockly.Python.turtle_right=function(t){return Blockly.Python.valueToCode(t,"TURTLE",Blockly.Python.ORDER_ATOMIC)+".right("+Blockly.Python.valueToCode(t,"ANGLE",Blockly.Python.ORDER_ATOMIC)+")\n"},PythonToBlocks.KNOWN_ATTR_FUNCTIONS.right=function(t,e,l,o,n,r){if(1!=e.length)throw new Error("Incorrect number of arguments to turtle.right!");return[block("turtle_right",t.lineno,{},{ANGLE:this.convert(e[0]),TURTLE:this.convert(t.value)},{inline:"true"})]}}});
//# sourceMappingURL=0.ab950c7d.chunk.js.map